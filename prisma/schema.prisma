generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Session {
  id            String          @id @default(uuid())
  name          String
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  playerSessions PlayerSession[]
  pokemons      Pokemon[]
}

model Player {
  id             String          @id
  username       String
  playerSessions PlayerSession[]
  pokemons       Pokemon[]
}

model PlayerSession {
  id        String   @id @default(uuid())
  playerId  String
  sessionId String
  player    Player   @relation(fields: [playerId], references: [id])
  session   Session  @relation(fields: [sessionId], references: [id])
  isViewer  Boolean  @default(false)
  joinedAt  DateTime @default(now())

  @@unique([playerId, sessionId])
}

model Pokemon {
  id             String   @id @default(uuid())
  name           String
  image          String
  route          String
  isDead         Boolean  @default(false)
  isLinked       Boolean  @default(true)
  inBox          Boolean  @default(false)
  position       Int      @default(0)
  player         Player   @relation(fields: [playerId], references: [id])
  playerId       String
  session        Session  @relation(fields: [sessionId], references: [id])
  sessionId      String
  linkGroup      String?  // Identifier for linked Pokémon (based on route)
  inTeam         Boolean  @default(false) // Whether the Pokémon is in the team
  validTeamLink  Boolean  @default(false) // Whether the Pokémon has valid team links

  @@unique([playerId, sessionId, position]) // Ensure unique positions per player per session
}
