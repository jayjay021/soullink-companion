{
  "openapi": "3.0.3",
  "info": {
    "title": "SoulLink Companion API",
    "description": "API for the SoulLink Companion application",
    "version": "1.0.0",
    "contact": {
      "name": "API Support",
      "email": "support@soullink.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "http://localhost:5001/api/v1",
      "description": "Development server"
    },
    {
      "url": "https://api.soullink.com/v1",
      "description": "Production server"
    }
  ],
  "paths": {
    "/health": {
      "get": {
        "summary": "Health check endpoint",
        "description": "Returns the health status of the API",
        "operationId": "getHealth",
        "tags": [
          "System"
        ],
        "responses": {
          "200": {
            "description": "Health status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/session": {
      "get": {
        "summary": "List sessions",
        "description": "Returns a list of all sessions",
        "operationId": "listSessions",
        "tags": [
          "Session"
        ],
        "responses": {
          "200": {
            "description": "List of sessions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionsResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "post": {
        "summary": "Create a new session",
        "description": "Creates a new session",
        "operationId": "createSession",
        "tags": [
          "Session"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "description"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Session created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Session"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/session/{sessionId}": {
      "parameters": [
        {
          "name": "sessionId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "Get session by ID",
        "description": "Returns a session by its ID",
        "operationId": "getSession",
        "tags": [
          "Session"
        ],
        "responses": {
          "200": {
            "description": "Session found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Session"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "put": {
        "summary": "Update session",
        "description": "Update session name, description, or started status",
        "operationId": "updateSession",
        "tags": [
          "Session"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "started": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Session updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Session"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "delete": {
        "summary": "Delete session",
        "description": "Deletes a session by its ID",
        "operationId": "deleteSession",
        "tags": [
          "Session"
        ],
        "responses": {
          "204": {
            "description": "Session deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/session/{sessionId}/join": {
      "post": {
        "summary": "Join session",
        "description": "Join a session as a player",
        "operationId": "joinSession",
        "tags": [
          "Session"
        ],
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "player"
                ],
                "properties": {
                  "player": {
                    "$ref": "#/components/schemas/Player"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Player joined session",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Session"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "HealthResponse": {
        "type": "object",
        "required": [
          "status",
          "timestamp",
          "uptime"
        ],
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "ok",
              "error"
            ],
            "description": "Health status"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "Current server timestamp"
          },
          "uptime": {
            "type": "number",
            "description": "Server uptime in seconds"
          },
          "version": {
            "type": "string",
            "description": "API version"
          }
        },
        "example": {
          "status": "ok",
          "timestamp": "2025-06-20T08:59:34.496Z",
          "uptime": 20.243046746,
          "version": "1.0.0"
        }
      },
      "Error": {
        "type": "object",
        "required": [
          "success",
          "error"
        ],
        "properties": {
          "success": {
            "type": "boolean",
            "enum": [
              false
            ]
          },
          "error": {
            "type": "object",
            "required": [
              "message"
            ],
            "properties": {
              "message": {
                "type": "string",
                "description": "Error message"
              },
              "code": {
                "type": "string",
                "description": "Error code"
              },
              "details": {
                "type": "object",
                "description": "Additional error details"
              }
            }
          }
        },
        "example": {
          "success": false,
          "error": {
            "message": "Resource not found",
            "code": "NOT_FOUND"
          }
        }
      },
      "Session": {
        "type": "object",
        "required": [
          "id",
          "name",
          "description",
          "creationDate",
          "started",
          "players"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "creationDate": {
            "type": "string",
            "format": "date-time"
          },
          "started": {
            "type": "boolean"
          },
          "players": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Player"
            }
          }
        },
        "example": {
          "id": "session-123",
          "name": "My Session",
          "description": "A fun session",
          "creationDate": "2025-06-20T09:00:00.000Z",
          "started": false,
          "players": [
            {
              "id": "player-1",
              "name": "Alice"
            },
            {
              "id": "player-2",
              "name": "Bob"
            }
          ]
        }
      },
      "SessionsResponse": {
        "type": "object",
        "required": [
          "sessions"
        ],
        "properties": {
          "sessions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SessionListItem"
            }
          }
        },
        "example": {
          "sessions": [
            {
              "id": "session-123",
              "name": "My Session",
              "description": "A fun session",
              "creationDate": "2025-06-20T09:00:00.000Z",
              "started": false
            },
            {
              "id": "session-456",
              "name": "Another Session",
              "description": "Another fun session",
              "creationDate": "2025-06-20T10:00:00.000Z",
              "started": true
            }
          ]
        }
      },
      "SessionListItem": {
        "type": "object",
        "required": [
          "id",
          "name",
          "description",
          "creationDate",
          "started"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "creationDate": {
            "type": "string",
            "format": "date-time"
          },
          "started": {
            "type": "boolean"
          }
        },
        "example": {
          "id": "session-123",
          "name": "My Session",
          "description": "A fun session",
          "creationDate": "2025-06-20T09:00:00.000Z",
          "started": false
        }
      },
      "Player": {
        "type": "object",
        "required": [
          "id",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "example": {
          "id": "player-1",
          "name": "Alice"
        }
      }
    },
    "responses": {
      "BadRequest": {
        "description": "Bad request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "NotFound": {
        "description": "Resource not found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "InternalServerError": {
        "description": "Internal server error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "System",
      "description": "System health and monitoring endpoints"
    },
    {
      "name": "Session",
      "description": "Game management endpoints"
    }
  ]
}